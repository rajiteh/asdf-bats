#!/usr/bin/env  bash

set -e
set -o pipefail

source "$(dirname "${BASH_SOURCE[0]}")/../lib/tools.bash"

toolname=$(get_tool_name)



fail() {
  echo -e "\e[31mFail:\e[m $*"
  exit 1
}

# expects that asdf calls bin/download first
install_bats() {
  local install_path=$1
  local download_path=$2
  local work_dir
  work_dir="$(pwd)"

  (
    cd "$download_path"
    echo "* Installing ${toolname} to $install_path"
    mkdir -p "$install_path"

    if [ $toolname = "bats" ]; then
      # install script from Bats-Code repo
      ./install.sh "$install_path"
    else
      mkdir -p "$install_path/bin"
      cp -r . "$install_path/bin"
    fi

    cd "$work_dir"
    echo "* successfully installed to $install_path"
    return 0
  ) || (
    echo "Failure - going to clean up install folder"
    rm -rf "$install_path"
    fail "An error occured during installation"
  )
}

install_path=${1:-"$ASDF_INSTALL_PATH"}
if [[ -z "$install_path" ]]; then
  fail "Install path is unspecified - add 1st argument or set \$ASDF_INSTALL_PATH"
fi

download_path=${2:-"$ASDF_DOWNLOAD_PATH"}
if [[ -z "$download_path" ]]; then
  fail "Download path is unspecified - add 2nd argument or set \$ASDF_DOWNLOAD_PATH"
fi


install_bats "$install_path" "$download_path"
